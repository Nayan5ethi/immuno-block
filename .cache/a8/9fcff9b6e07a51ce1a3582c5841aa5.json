{"id":"../node_modules/lodash-es/clone.js","dependencies":[{"name":"/home/drig/immuno-block/package.json","includedInParent":true,"mtime":1601108929645},{"name":"/home/drig/immuno-block/.babelrc","includedInParent":true,"mtime":1601102535201},{"name":"/home/drig/immuno-block/node_modules/lodash-es/package.json","includedInParent":true,"mtime":1601108924815},{"name":"./_baseClone.js","loc":{"line":1,"column":22},"parent":"/home/drig/immuno-block/node_modules/lodash-es/clone.js","resolved":"/home/drig/immuno-block/node_modules/lodash-es/_baseClone.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseClone = _interopRequireDefault(require(\"./_baseClone.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\n\nfunction clone(value) {\n  return (0, _baseClone.default)(value, CLONE_SYMBOLS_FLAG);\n}\n\nvar _default = clone;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../node_modules/lodash-es/clone.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/lodash-es/clone.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/lodash-es/clone.js","original":{"line":4,"column":0}},{"name":"CLONE_SYMBOLS_FLAG","generated":{"line":13,"column":4},"source":"../node_modules/lodash-es/clone.js","original":{"line":4,"column":4}},{"generated":{"line":13,"column":22},"source":"../node_modules/lodash-es/clone.js","original":{"line":4,"column":22}},{"generated":{"line":13,"column":25},"source":"../node_modules/lodash-es/clone.js","original":{"line":4,"column":25}},{"generated":{"line":13,"column":26},"source":"../node_modules/lodash-es/clone.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/lodash-es/clone.js","original":{"line":6,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/lodash-es/clone.js","original":{"line":32,"column":0}},{"name":"clone","generated":{"line":41,"column":9},"source":"../node_modules/lodash-es/clone.js","original":{"line":32,"column":9}},{"generated":{"line":41,"column":14},"source":"../node_modules/lodash-es/clone.js","original":{"line":32,"column":0}},{"name":"value","generated":{"line":41,"column":15},"source":"../node_modules/lodash-es/clone.js","original":{"line":32,"column":15}},{"generated":{"line":41,"column":20},"source":"../node_modules/lodash-es/clone.js","original":{"line":32,"column":0}},{"generated":{"line":41,"column":22},"source":"../node_modules/lodash-es/clone.js","original":{"line":32,"column":22}},{"generated":{"line":42,"column":0},"source":"../node_modules/lodash-es/clone.js","original":{"line":33,"column":2}},{"generated":{"line":42,"column":9},"source":"../node_modules/lodash-es/clone.js","original":{"line":33,"column":9}},{"name":"value","generated":{"line":42,"column":33},"source":"../node_modules/lodash-es/clone.js","original":{"line":33,"column":19}},{"generated":{"line":42,"column":38},"source":"../node_modules/lodash-es/clone.js","original":{"line":33,"column":9}},{"name":"CLONE_SYMBOLS_FLAG","generated":{"line":42,"column":40},"source":"../node_modules/lodash-es/clone.js","original":{"line":33,"column":26}},{"generated":{"line":42,"column":58},"source":"../node_modules/lodash-es/clone.js","original":{"line":33,"column":9}},{"generated":{"line":42,"column":59},"source":"../node_modules/lodash-es/clone.js","original":{"line":33,"column":2}},{"generated":{"line":43,"column":0},"source":"../node_modules/lodash-es/clone.js","original":{"line":34,"column":1}},{"name":"clone","generated":{"line":45,"column":15},"source":"../node_modules/lodash-es/clone.js","original":{"line":36,"column":15}}],"sources":{"../node_modules/lodash-es/clone.js":"import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n"},"lineCount":null}},"error":null,"hash":"08f1f582f1b8aa0f432b041c449a55d9","cacheData":{"env":{}}}